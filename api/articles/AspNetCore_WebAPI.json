{"title":"Asp.Net Core API Controller繼承","slug":"AspNetCore_WebAPI","date":"2023-04-16T12:40:48.000Z","updated":"2023-04-23T06:10:08.314Z","comments":true,"path":"api/articles/AspNetCore_WebAPI.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h1 id=\"Net-Core-Web-API-–-API-Controller-的繼承\"><a href=\"#Net-Core-Web-API-–-API-Controller-的繼承\" class=\"headerlink\" title=\".Net Core Web API – API Controller 的繼承\"></a>.Net Core Web API – API Controller 的繼承</h1><h2 id=\"API-Controller-繼承\"><a href=\"#API-Controller-繼承\" class=\"headerlink\" title=\"API Controller 繼承\"></a>API Controller 繼承</h2><p>建立新的API Controller類別時，繼承到底要繼承Controller還是ControllerBase? 這兩個類別有什麼差異?<br>當翻開原始碼時候可以發現兩個類別的繼承關係。</p>\n<ul>\n<li>完整程式碼 : <a href=\"https://github.com/dotnet/aspnetcore/blob/main/src/Mvc/Mvc.Core/src/ControllerBase.cs\">ControllerBase</a></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Controller]</span><br><span class=\"line\">public abstract class ControllerBase</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    private ControllerContext? _controllerContext;</span><br><span class=\"line\">    private IModelMetadataProvider? _metadataProvider;</span><br><span class=\"line\">    private IModelBinderFactory? _modelBinderFactory;</span><br><span class=\"line\">    private IObjectModelValidator? _objectValidator;</span><br><span class=\"line\">    private IUrlHelper? _url;</span><br><span class=\"line\">    private ProblemDetailsFactory? _problemDetailsFactory;</span><br><span class=\"line\">    // 略</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>完整程式碼 : <a href=\"https://github.com/dotnet/aspnetcore/blob/main/src/Mvc/Mvc.ViewFeatures/src/Controller.cs\">Controller</a></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">/// &lt;summary&gt;</span><br><span class=\"line\">/// A base class for an MVC controller with view support.</span><br><span class=\"line\">/// &lt;/summary&gt;</span><br><span class=\"line\">public abstract class Controller : ControllerBase, IActionFilter, IAsyncActionFilter, IDisposable</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    private ITempDataDictionary? _tempData;</span><br><span class=\"line\">    private DynamicViewData? _viewBag;</span><br><span class=\"line\">    private ViewDataDictionary? _viewData;</span><br><span class=\"line\">    // 略</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>這發現了Controller.cs只是比ControllerBase.cs多了許多View上類別。所以當需要開發WebAPI，繼承了ControllerBase，會多了不必要處理View的方法。所以開發WebAPI的時候，應繼承 ControllerBase.cs，當開發MVC的時候則繼承 Controller.cs</p>\n","categories":[{"name":"WebAPI","slug":"WebAPI","count":6,"path":"api/categories/WebAPI.json"}],"tags":[{"name":"2023","slug":"2023","count":7,"path":"api/tags/2023.json"},{"name":".Net Core","slug":"Net-Core","count":10,"path":"api/tags/Net-Core.json"},{"name":"WebAPI","slug":"WebAPI","count":2,"path":"api/tags/WebAPI.json"}]}