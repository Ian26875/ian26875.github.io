{"name":"2024","slug":"2024","count":2,"postlist":[{"title":"MockServer 整合測試","slug":"MockServer_1","date":"2024-01-14T13:19:48.000Z","updated":"2024-01-14T14:00:13.571Z","comments":true,"path":"api/articles/MockServer_1.json","excerpt":"","keywords":null,"cover":"/../static/images/MockServerUI.png","content":"<h1 id=\"Mock-Server\"><a href=\"#Mock-Server\" class=\"headerlink\" title=\"Mock Server\"></a>Mock Server</h1><p>由於要針對API 服務進行壓力測試，並假設其他服務有回應延遲，需要使用一套簡單使用的MockServer，原本想使用Postman，但礙於環境限制，於是找一套可以運行在Docker上的MockServer。</p>\n<h2 id=\"Docker-Install\"><a href=\"#Docker-Install\" class=\"headerlink\" title=\"Docker Install\"></a>Docker Install</h2><p>首先執行 Docker 指令下載 Docker Image，並執行。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name mockserver -p 1080:1080 mockserver/mockserver</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"MockServer-UI\"><a href=\"#MockServer-UI\" class=\"headerlink\" title=\"MockServer UI\"></a>MockServer UI</h2><p>GET <code>http://localhost:1080/mockserver/dashboard</code>，在瀏覽器輸入這個網址便能看到 MockServer 的畫面。</p>\n<p>從這邊可以看到以下的畫面。<br><img src=\"/../static/images/MockServerUI.png\" alt=\"Dashboard\"></p>\n<h2 id=\"Create-or-Update-Expectation\"><a href=\"#Create-or-Update-Expectation\" class=\"headerlink\" title=\"Create or Update Expectation\"></a>Create or Update Expectation</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Main</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> mockServerHost = <span class=\"string\">&quot;http://localhost:1080&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">using</span> (<span class=\"keyword\">var</span> client = <span class=\"keyword\">new</span> HttpClient())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">        <span class=\"keyword\">var</span> mockServerUrl = <span class=\"string\">$&quot;<span class=\"subst\">&#123;mockServerHost&#125;</span>/mockserver/expectation&quot;</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"keyword\">var</span> expectation = <span class=\"keyword\">new</span> MockServerExpectation</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">\t\t\tId = <span class=\"string\">&quot;e5805f53-340b-4c9e-9399-aa0ac75266ee&quot;</span>,</span><br><span class=\"line\">\t\t\tPriority=<span class=\"number\">0</span>,</span><br><span class=\"line\">            HttpRequest = <span class=\"keyword\">new</span> HttpRequest</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Method = <span class=\"string\">&quot;GET&quot;</span>,</span><br><span class=\"line\">                Path = <span class=\"string\">&quot;/get/yourpath&quot;</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"comment\">// 模擬回應</span></span><br><span class=\"line\">            HttpResponse = <span class=\"keyword\">new</span> HttpResponse</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                StatusCode = <span class=\"number\">200</span>,</span><br><span class=\"line\">                Body = JsonConvert.SerializeObject</span><br><span class=\"line\">\t\t\t\t(</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">new</span> </span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        Success = <span class=\"literal\">true</span></span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">                ),</span><br><span class=\"line\">                <span class=\"comment\">// 模擬延遲10秒回應</span></span><br><span class=\"line\">\t\t\t\tDelay = <span class=\"keyword\">new</span> Delay</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tTimeUnit = <span class=\"string\">&quot;SECONDS&quot;</span>,</span><br><span class=\"line\">\t\t\t\t\tValue = <span class=\"number\">10</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> jsonSetting = <span class=\"keyword\">new</span> JsonSerializerSettings </span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tNullValueHandling = NullValueHandling.Ignore</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> json = JsonConvert.SerializeObject(expectation, jsonSetting);</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> content = <span class=\"keyword\">new</span> StringContent(json, Encoding.UTF8, <span class=\"string\">&quot;application/json&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> response = client.PutAsync(mockServerUrl, content).GetAwaiter().GetResult();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tConsole.WriteLine(<span class=\"string\">$&quot;Response Status Code: <span class=\"subst\">&#123;response.StatusCode&#125;</span>&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">MockServerExpectation</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t[<span class=\"meta\">JsonProperty(<span class=\"string\">&quot;id&quot;</span>)</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Id &#123;<span class=\"keyword\">get</span>;<span class=\"keyword\">set</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t[<span class=\"meta\">JsonProperty(<span class=\"string\">&quot;priority&quot;</span>)</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Priority &#123;<span class=\"keyword\">get</span>;<span class=\"keyword\">set</span>;&#125; = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t[<span class=\"meta\">JsonProperty(<span class=\"string\">&quot;httpRequest&quot;</span>)</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> HttpRequest HttpRequest &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t[<span class=\"meta\">JsonProperty(<span class=\"string\">&quot;httpResponse&quot;</span>)</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> HttpResponse HttpResponse &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">HttpRequest</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t[<span class=\"meta\">JsonProperty(<span class=\"string\">&quot;method&quot;</span>)</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Method &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t[<span class=\"meta\">JsonProperty(<span class=\"string\">&quot;path&quot;</span>)</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Path &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">HttpResponse</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t[<span class=\"meta\">JsonProperty(<span class=\"string\">&quot;statusCode&quot;</span>)</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"built_in\">int</span> StatusCode &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t[<span class=\"meta\">JsonProperty(<span class=\"string\">&quot;body&quot;</span>)</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"built_in\">object</span> Body &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t[<span class=\"meta\">JsonProperty(<span class=\"string\">&quot;delay&quot;</span>)</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Delay Delay &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Delay</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t[<span class=\"meta\">JsonProperty(<span class=\"string\">&quot;timeUnit&quot;</span>)</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"built_in\">string</span> TimeUnit &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t[<span class=\"meta\">JsonProperty(<span class=\"string\">&quot;value&quot;</span>)</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Value &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Request 以下的 Content 給 MockServer，非常簡單使用。</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;e5805f53-340b-4c9e-9399-aa0ac75266ee&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;priority&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;httpRequest&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;method&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;GET&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;path&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/get/yourpath&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;httpResponse&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;statusCode&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">200</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;body&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&#123;\\&quot;Success\\&quot;:true&#125;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;delay&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;timeUnit&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;SECONDS&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">10</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>使用上面的API 進行 建立修改 Expectation，之後將要Web服務指向這個Url即可進行使用。可以進行一些API異常測試等等。</p>\n<h2 id=\"使用情境\"><a href=\"#使用情境\" class=\"headerlink\" title=\"使用情境\"></a>使用情境</h2><ul>\n<li><strong>API 模擬</strong></li>\n</ul>\n<p>有時間我們需要測試串接第三方API，尤其對方還尚未提供測試環境。</p>\n<ul>\n<li><strong>錯誤處理模擬</strong></li>\n</ul>\n<p>測試應用程序如何處理各種錯誤 Response，如 4xx 和 5xx 狀態碼。</p>\n<ul>\n<li><strong>延時和性能測試</strong></li>\n</ul>\n<p>模擬回應延遲和服務器處理時間，這對於測試應用程序在不同條件下的性能非常有用。</p>\n<hr>\n<p>MockServer 非常適合於在開發階段進行測試，尤其當你需要與外部系統整合但該系統尚未準備。也可以用於自動化測試，提供一個可控且可預測的外部系統環境。</p>\n<p>原本的應用程式因為要測試情境，採用appsettings.json去控制測試情境。千萬不要把這種程式碼寫在Production Code Commit。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://www.tpisoftware.com/tpu/articleDetails/1895\">MockServer入門：輕鬆整合前後端接口</a></li>\n<li><a href=\"https://www.mock-server.com/\">MockServer 官方文件</a></li>\n</ul>\n","text":"Mock Server由於要針對API 服務進行壓力測試，並假設其他服務有回應延遲，需要使用一套簡單使用的MockServer，原本想使用Postman，但礙於環境限制，於是找一套可以運行在Docker上的MockServer。Docker Install首先執行 Docker ","link":"","raw":null,"photos":[],"categories":[{"name":"MockServer","slug":"MockServer","count":1,"path":"api/categories/MockServer.json"},{"name":"Test","slug":"MockServer/Test","count":1,"path":"api/categories/MockServer/Test.json"}],"tags":[{"name":"2024","slug":"2024","count":2,"path":"api/tags/2024.json"}]},{"title":"更高效 Logging - LoggerMessage","slug":"LoggingMessage","date":"2024-02-16T12:19:48.000Z","updated":"2024-02-16T12:30:40.310Z","comments":true,"path":"api/articles/LoggingMessage.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"Logging-LoggerMessage\"><a href=\"#Logging-LoggerMessage\" class=\"headerlink\" title=\"Logging - LoggerMessage\"></a>Logging - LoggerMessage</h1><p>原先在記錄Log都會使用微軟提供LoggingExtensions方法，最近朋友聊天分享給我<code>LoggerMessage.cs</code>與<code>LoggerMessageAttribute.cs</code>。於是研究一下並記錄一下。</p>\n<p>下面提供兩種方式去改寫Logging提升效能，官方文件提到以下原因，進而提升效能。</p>\n<blockquote>\n<p>相較於記錄器擴充方法，LoggerMessage 提供下列效能優勢：<br>記錄器擴充方法需要 “boxing” (轉換) 實值型別，例如將 int 轉換為 object。 LoggerMessage 模式可使用靜態 Action 欄位和擴充方法搭配強型別參數來避免 boxing。<br>記錄器擴充方法在每次寫入記錄訊息時，都必須剖析訊息範本 (具名格式字串)。 LoggerMessage 只需在定義訊息時剖析範本一次。</p>\n</blockquote>\n<p>這是原本使用 <code>LoggingExtensions.cs</code>去寫 Logging，這邊要注意的是 EventId 是自定的數字。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  [<span class=\"meta\">HttpGet(Name = <span class=\"string\">&quot;GetWeatherForecast&quot;</span>)</span>]</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> IEnumerable&lt;WeatherForecast&gt; <span class=\"title\">Get</span>()</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      _logger.LogInformation</span><br><span class=\"line\">(</span><br><span class=\"line\">\t<span class=\"keyword\">new</span> EventId(<span class=\"number\">13</span>,<span class=\"string\">&quot;CreateOrderFailure&quot;</span>),</span><br><span class=\"line\">\t<span class=\"string\">&quot;create order failed !! order id : &#123;orderId&#125;&quot;</span>,<span class=\"number\">100</span></span><br><span class=\"line\">);</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">// 略</span></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<br>\n\n<hr>\n<h2 id=\"第一種方式-LoggerMessage-類別\"><a href=\"#第一種方式-LoggerMessage-類別\" class=\"headerlink\" title=\"第一種方式 - LoggerMessage 類別\"></a>第一種方式 - LoggerMessage 類別</h2><p>LoggerMessage.Define 是回傳委派共提供最多六個參數。<br>這邊簡單建立類別。</p>\n<ul>\n<li><p>LogHelper.cs</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">LogHelper</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Action&lt;ILogger, <span class=\"built_in\">int</span>, Exception&gt; FailedToCreateOrder =&gt; LoggerMessage.Define&lt;<span class=\"built_in\">int</span>&gt;</span><br><span class=\"line\">    (</span><br><span class=\"line\">        LogLevel.Information,</span><br><span class=\"line\">        <span class=\"keyword\">new</span> EventId(<span class=\"number\">13</span>, <span class=\"keyword\">nameof</span>(CreateOrderFailure)),</span><br><span class=\"line\">        <span class=\"string\">&quot;create order failed !! order id : &#123;order.Id&#125;&quot;</span></span><br><span class=\"line\">    );</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateOrderFailure</span>(<span class=\"params\"><span class=\"keyword\">this</span> ILogger logger,Order order</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (logger.IsEnabled(LogLevel.Information))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            FailedToCreateOrder(logger, order.Id, <span class=\"literal\">default</span>!);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n<li><p>調用方</p>\n</li>\n</ul>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"meta\">HttpGet(Name = <span class=\"string\">&quot;GetWeatherForecast&quot;</span>)</span>]</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> IEnumerable&lt;WeatherForecast&gt; <span class=\"title\">Get</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 使用擴充方法</span></span><br><span class=\"line\">    _logger.CreateOrderFailure(<span class=\"keyword\">new</span> Order</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Id=<span class=\"number\">100</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 略</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>執行結果 :</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">info: LogDefinition.Controllers.WeatherForecastController[13]</span><br><span class=\"line\">      create order failed !! order id : 100</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"第二種方式-LoggerMessageAttribute-類別\"><a href=\"#第二種方式-LoggerMessageAttribute-類別\" class=\"headerlink\" title=\"第二種方式 - LoggerMessageAttribute 類別\"></a>第二種方式 - LoggerMessageAttribute 類別</h2><p>這邊要注意的是 <code>LoggerMessageAttribute.cs</code> 類別是在 <strong>.Net 6</strong> 以後才引入的。</p>\n<p>使用 LoggerMessageAttribute 時，必須遵守限制：</p>\n<ul>\n<li>記錄方法必須為 partial 並傳回 void。</li>\n<li>記錄方法名稱不可以底線開頭。</li>\n<li>記錄方法的參數名稱不可以底線開頭。</li>\n<li>記錄方法不可在巢狀型別中定義。</li>\n<li>記錄方法不可為泛型。</li>\n<li>如果記錄方法為 static，則須以 ILogger 執行個體作為參數。</li>\n</ul>\n<p>這邊也建立 <code>LogHelperV2.cs</code> 類別</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">class</span> <span class=\"title\">LogHelperV2</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">LoggerMessage(13, LogLevel.Information, <span class=\"string\">&quot;create order failed !! order id : &#123;OrderId&#125;&quot;</span>, EventName = <span class=\"string\">&quot;CreateOrderFailureV2&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateOrderFailureV2</span>(<span class=\"params\"><span class=\"keyword\">this</span> ILogger logger, <span class=\"built_in\">int</span> orderId</span>)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>調用方:</li>\n</ul>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"meta\">HttpGet(Name = <span class=\"string\">&quot;GetWeatherForecast&quot;</span>)</span>]</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> IEnumerable&lt;WeatherForecast&gt; <span class=\"title\">Get</span>()</span></span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">       <span class=\"comment\">// 加上這一行</span></span><br><span class=\"line\">       _logger.CreateOrderFailureV2(<span class=\"number\">100</span>);</span><br><span class=\"line\">       </span><br><span class=\"line\">       <span class=\"comment\">// 略</span></span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>執行結果 : </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">info: LogDefinition.Controllers.WeatherForecastController[13]</span><br><span class=\"line\">      create order failed !! order id : 100</span><br></pre></td></tr></table></figure>\n\n<p>這邊也提供官方範例作為範例。</p>\n<ul>\n<li>官方範例 : <a href=\"https://github.com/dotnet/aspnetcore/blob/9db62024cbe3c3cb28efe372541fc1bdfcdb375e/src/Middleware/HttpsPolicy/src/HttpsLoggingExtensions.cs\">HttpsLoggingExtensions.cs</a></li>\n</ul>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Microsoft.Extensions.Logging;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Microsoft.AspNetCore.HttpsPolicy</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">internal</span> <span class=\"keyword\">static</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">class</span> <span class=\"title\">HttpsLoggingExtensions</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">LoggerMessage(1, LogLevel.Debug, <span class=\"string\">&quot;Redirecting to &#x27;&#123;redirect&#125;&#x27;.&quot;</span>, EventName = <span class=\"string\">&quot;RedirectingToHttps&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">void</span> <span class=\"title\">RedirectingToHttps</span>(<span class=\"params\"><span class=\"keyword\">this</span> ILogger logger, <span class=\"built_in\">string</span> redirect</span>)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">LoggerMessage(2, LogLevel.Debug, <span class=\"string\">&quot;Https port &#x27;&#123;port&#125;&#x27; loaded from configuration.&quot;</span>, EventName = <span class=\"string\">&quot;PortLoadedFromConfig&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">void</span> <span class=\"title\">PortLoadedFromConfig</span>(<span class=\"params\"><span class=\"keyword\">this</span> ILogger logger, <span class=\"built_in\">int</span> port</span>)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">LoggerMessage(3, LogLevel.Warning, <span class=\"string\">&quot;Failed to determine the https port for redirect.&quot;</span>, EventName = <span class=\"string\">&quot;FailedToDeterminePort&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">void</span> <span class=\"title\">FailedToDeterminePort</span>(<span class=\"params\"><span class=\"keyword\">this</span> ILogger logger</span>)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">LoggerMessage(5, LogLevel.Debug, <span class=\"string\">&quot;Https port &#x27;&#123;httpsPort&#125;&#x27; discovered from server endpoints.&quot;</span>, EventName = <span class=\"string\">&quot;PortFromServer&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">void</span> <span class=\"title\">PortFromServer</span>(<span class=\"params\"><span class=\"keyword\">this</span> ILogger logger, <span class=\"built_in\">int</span> httpsPort</span>)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"資料來源\"><a href=\"#資料來源\" class=\"headerlink\" title=\"資料來源\"></a>資料來源</h2><ul>\n<li><a href=\"https://learn.microsoft.com/zh-tw/dotnet/core/extensions/high-performance-logging\">https://learn.microsoft.com/zh-tw/dotnet/core/extensions/high-performance-logging</a></li>\n<li><a href=\"https://learn.microsoft.com/zh-tw/dotnet/core/extensions/logger-message-generator\">https://learn.microsoft.com/zh-tw/dotnet/core/extensions/logger-message-generator</a></li>\n</ul>\n","text":"Logging - LoggerMessage原先在記錄Log都會使用微軟提供LoggingExtensions方法，最近朋友聊天分享給我LoggerMessage.cs與LoggerMessageAttribute.cs。於是研究一下並記錄一下。下面提供兩種方式去改寫Loggi","link":"","raw":null,"photos":[],"categories":[{"name":"WebAPI","slug":"WebAPI","count":3,"path":"api/categories/WebAPI.json"},{"name":"Log","slug":"WebAPI/Log","count":1,"path":"api/categories/WebAPI/Log.json"}],"tags":[{"name":".Net Core","slug":"Net-Core","count":7,"path":"api/tags/Net-Core.json"},{"name":"WebAPI","slug":"WebAPI","count":2,"path":"api/tags/WebAPI.json"},{"name":"2024","slug":"2024","count":2,"path":"api/tags/2024.json"}]}]}