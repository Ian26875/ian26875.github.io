{"name":"Interface","slug":"Interface","count":1,"postlist":[{"title":"設計抽象介面","slug":"InterfaceDesign","date":"2023-04-16T13:22:48.000Z","updated":"2024-05-18T01:07:33.586Z","comments":true,"path":"api/articles/InterfaceDesign.json","excerpt":"<h1 id=\"抽象介面設計-抽象洩漏\"><a href=\"#抽象介面設計-抽象洩漏\" class=\"headerlink\" title=\"抽象介面設計 - 抽象洩漏\"></a>抽象介面設計 - 抽象洩漏</h1><p>在軟體開發上使用抽象介面是很常用的手段，但是介面設計往往沒有很好的檢視。導致後續使用介面遇到許多問題，甚至質疑使用介面。往往不是介面的錯，是設計介面品質出錯。導致抽象並沒有很好的發揮該有的隱蔽細節、簡化問題的功能。</p>","keywords":null,"cover":null,"content":null,"text":"抽象介面設計 - 抽象洩漏在軟體開發上使用抽象介面是很常用的手段，但是介面設計往往沒有很好的檢視。導致後續使用介面遇到許多問題，甚至質疑使用介面。往往不是介面的錯，是設計介面品質出錯。導致抽象並沒有很好的發揮該有的隱蔽細節、簡化問題的功能。什麼是抽象洩漏?「抽象泄漏」是軟體開發時","link":"","raw":null,"photos":[],"categories":[{"name":"OOP","slug":"OOP","count":8,"path":"api/categories/OOP.json"}],"tags":[{"name":"2023","slug":"2023","count":7,"path":"api/tags/2023.json"},{"name":"Interface","slug":"Interface","count":1,"path":"api/tags/Interface.json"}]}]}